(setq org-agenda-inhibit-startup t)
(setq org-agenda-skip-unavailable-files t)
                                     
(setq org-agenda-sorting-strategy
   (quote
	((agenda todo-state-down deadline-down priority-down effort-up)
	 (todo todo-state-down deadline-down priority-down effort-up)
	 (tags priority-down category-keep)
	 (search category-keep))))
     
                                     (setq org-todo-keywords
     (quote ((sequence "TODO(t)" "NEXT(n)" "WAITING(w)" "DELEGATED(d)" "SOMEDAY(s)" "|" "DONE(x)"))))
      
(setq org-todo-keyword-faces
      (quote (("TODO" :foreground "red" :weight bold)
              ("NEXT" :foreground "blue" :weight bold)
              ("DONE" :foreground "forest green" :weight bold)
              ("WAITING" :foreground "orange" :weight bold)
              ("DELEGATED" :foreground "magenta" :weight bold)
              ("SOMEDAY" :foreground "gray" :weight bold))))

(setq org-tag-alist
   (quote
	((:startgroup "Category")
	 ("law" . ?l )
     ("errand" . ?e)
	 ("WB" . ?w)
	 ("tech" . ?t)
	 ("people" . ?p)
	 ("writing" . ?w)
	 ("music" . ?m)
	 (:endgroup "Category"))))

(setq org-agenda-files
   (quote
	("~/Dropbox/notes/organize.org" "~/Dropbox/notes/WBtodo.org" "~/Dropbox/notes/todo.org" "~/Dropbox/notes/WB.org" "~/Dropbox/notes/law.org" "~/Dropbox/notes/finance.org" "~/Dropbox/notes/principles.org")))
     
;;(setq org-completion-use-ido t)
;; (setq ido-max-directory-size 100000)
;; (setq ido-everywhere t)
;; (setq ido-everywhere t)
;; (setq ido-default-file-method 'selected-window)
;; (setq ido-default-buffer-method 'selected-window)

(setq org-use-tag-inheritance t)
(setq org-use-speed-commands t)
;;(setq org-use-property-inheritance '("CONTEXT"))
(setq org-use-fast-todo-selection t)
(setq org-track-ordered-property-with-tag t)
(setq org-time-stamp-rounding-minutes '(0 15))
(setq org-tags-sort-function (quote string<))             
(setq org-tags-match-list-sublevels t)
(setq org-table-export-default-format "orgtbl-to-csv")
(setq org-support-shift-select t)
;;(setq org-support-shift-select (quote always))
(setq org-stuck-projects (quote ("-inactive/TODO" ("TODO" "WAITING") nil "")))
(setq org-stuck-projects (quote ("+LEVEL=2/-DONE" ("@Urgent") ("@Urgent") "")))
(setq org-startup-truncated nil)
(setq org-startup-indented t)
(setq org-startup-folded t)
(setq org-startup-align-all-tables nil)
(setq org-src-preserve-indentation nil)
(setq org-src-fontify-natively t)
(setq org-speed-commands-user nil)
(setq org-special-ctrl-k t)
(setq org-special-ctrl-a/e t)
(setq org-show-siblings (quote ((default))))
(setq org-show-hierarchy-above t)
(setq org-show-following-heading t)
(setq org-reverse-note-order t)
(setq org-return-follows-link t)
;;(setq org-remember-default-headline "")
;;(setq org-refile-use-outline-path t)
(setq org-refile-use-cache nil)
(setq org-refile-allow-creating-parent-nodes 'confirm)
(setq org-read-date-prefer-future nil)
(setq org-provide-todo-statistics t)
(setq org-priority-start-cycle-with-default nil)
(setq org-pretty-entities t)
(setq org-pretty-entities-include-sub-superscripts nil)
(setq org-outline-path-complete-in-steps nil)
(setq org-odd-level-only nil)
(setq org-mode-hook 'turn-on-auto-fill)
(setq org-mobile-use-encryption nil)
(setq org-mobile-index-file "~/Dropbox/notes/index.org")
(setq org-mobile-inbox-for-pull "~/Dropbox/notes/todo.org")
(setq org-mobile-directory "~/Dropbox/notes")
(setq org-lowest-priority ?C)
(setq org-log-state-notes-insert-after-drawers nil)
(setq org-log-reschedule (quote time))
(setq org-log-redeadline (quote note))
(setq org-log-into-drawer t)
(setq org-log-done 'time)
(setq org-insert-heading-respect-content nil)
(setq org-indirect-buffer-display 'current-window)
(setq org-indent-mode t)
(setq org-id-link-to-org-use-id 'create-if-interactive-and-no-custom-id)
(setq org-hierarchical-todo-statistics nil)
(setq org-hide-leading-stars t)
(setq org-hide-emphasis-markers t)
(setq org-habit-show-habits-only-for-today nil)
(setq org-goto-interface (quote outline-path-completion))
(setq org-fontify-done-headline t)
(setq org-fast-tag-selection-single-key t)
(setq org-export-htmlize-output-type 'css)
(setq org-export-coding-system 'utf-8)
(setq org-expiry-inactive-timestamps t)
(setq org-expiry-created-property-name "CREATED")
(setq org-enforce-todo-dependencies t)
(setq org-enforce-todo-checkbox-dependencies nil)
(setq org-enable-table-editor nil)
(setq org-ellipsis " . . . ")
(setq org-edit-src-content-indentation 0)
(setq org-directory "~/Dropbox/notes")
(setq org-descriptive-links nil)
(setq org-default-notes-file "~/Dropbox/notes/notes.org/")
(setq org-deadline-warning-days 7)
(setq org-cycle-separator-lines 0)
(setq org-cycle-include-plain-lists t)
(setq org-completion-use-ido t)
;;(setq org-columns-default-format "%PRIORITY %ITEM %TODO %TAGS %SCHEDULED %DEADLINE")
(setq org-clock-into-drawer t)
(setq org-clock-idle-time 10)
(setq org-catch-invisible-edits 'error)
(setq org-capture-templates nil)
(setq org-blank-before-new-entry nil)
;;(setq org-blank-before-new-entry (quote ((heading) (plain-list-item))))
(setq org-babel-no-eval-on-ctrl-c-ctrl-c t)
(setq org-babel-load-languages (quote ((python . t) (emacs-lisp . t) (js . t))))
(setq org-attach-store-link-p (quote attached))
(setq org-attach-auto-tag "ATTACHMENT")
(setq org-archive-location "%s_archive::~/Dropbox/notes/archive")
(setq org-alphabetical-lists t)
(setq org-agenda-window-setup 'current-window)
(setq org-agenda-use-tag-inheritance t)
(setq org-agenda-todo-list-sublevels t)
(setq org-agenda-todo-ignore-scheduled t)
(setq org-agenda-sticky nil)
(setq org-agenda-start-with-log-mode t)
(setq org-agenda-start-on-weekday nil)
(setq org-agenda-span 2)
(setq org-agenda-sorting-strategy (quote ((agenda priority-down time-up category-up) (todo priority down) (tags priority-down))))
(setq org-agenda-skip-timestamp-if-done t)
(setq org-agenda-skip-scheduled-if-done t)
(setq org-agenda-skip-deadline-prewarning-if-scheduled (quote pre-scheduled))
(setq org-agenda-skip-deadline-if-done t)
(setq org-agenda-skip-archived-trees nil)
(setq org-agenda-show-log t)
(setq org-agenda-show-all-dates t)
(setq org-agenda-restore-windows-after-quit t)
(setq org-agenda-persistent-filter t)
(setq org-agenda-ndays 7)
(setq org-agenda-mouse-1-follows-link t)
(setq org-agenda-max-todos 20)
(setq org-agenda-max-effort 600)
(setq org-agenda-log-mode-items (quote (closed clock state)))
(setq org-agenda-include-diary t)
(setq org-agenda-include-all-todo t)
(setq org-agenda-dim-blocked-tasks t)
(setq org-agenda-diary-file "~/Dropbox/notes/journal.org")
(setq org-after-todo-state-change-hook (quote (org-clock-out-if-current)))
(setq org-M-RET-may-split-line t)
(setq cua-keep-region-after-copy t)
(setq auto-fill-mode -1)


(defvar count-words-buffer
  nil
  "*Number of words in the buffer.")

   (defun org-contacts-template-email (&optional return-value)
    "Try to return the contact email for a template.
  If not found return RETURN-VALUE or something that would ask the user."
    (or (cadr (if (gnus-alive-p)
                  (gnus-with-article-headers
                    (mail-extract-address-components
                     (or (mail-fetch-field "Reply-To") (mail-fetch-field "From") "")))))
        return-value
        (concat "%^{" org-contacts-email-property "}p")))

(use-package winner
  :defer t)
  
(defvar opened-org-agenda-files nil)

(defun opened-org-agenda-files ()
  (let ((files (org-agenda-files)))
    (setq opened-org-agenda-files nil)
    (mapcar
      (lambda (x)
        (when (get-file-buffer x)
          (push x opened-org-agenda-files)))
      files)))

(defun kill-org-agenda-files ()
  (let ((files (org-agenda-files)))
    (mapcar
      (lambda (x)
        (when
            (and
              (get-file-buffer x)
              (not (member x opened-org-agenda-files)))
          (kill-buffer (get-file-buffer x))))
      files)))

(defadvice org-agenda-list (around opened-org-agenda-list-around activate)
  (opened-org-agenda-files)
  ad-do-it
  (kill-org-agenda-files))

(defadvice org-search-view (around org-search-view-around activate)
  (opened-org-agenda-files)
  ad-do-it
  (kill-org-agenda-files))

(defadvice org-tags-view (around org-tags-view-around activate)
  (opened-org-agenda-files)
  ad-do-it
  (kill-org-agenda-files))
